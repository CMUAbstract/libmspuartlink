# This file passes the config options to the compiler.
# See Makefile.config for available options then set then in top-level app makefile

include $(MAKER_ROOT)/Makefile.pre
include $(MAKER_ROOT)/Makefile.msp

# UARTLINK0
ifneq ($(LIBMSPUARTLINK0_UART_IDX),)
override CFLAGS += -DLIBMSPUARTLINK0_UART_IDX=$(LIBMSPUARTLINK0_UART_IDX)

#ifneq ($(words $(LIBMSPUARTLINK0_PIN_RX) $(LIBMSPUARTLINK0_PIN_TX)),1)
#$(error One of these config variables needs to be defined: LIBMSPUARTLINK_PIN_{RX,TX})
#endif

ifneq ($(LIBMSPUARTLINK0_PIN_RX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK0_PIN_RX)
endif # LIBMSPUARTLINK_PIN_RX

ifneq ($(LIBMSPUARTLINK0_PIN_TX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK0_PIN_TX)
endif # LIBMSPUARTLINK_PIN_TX

ifneq ($(LIBMSPUARTLINK0_BAUDRATE),)
override CFLAGS := $(CFLAGS) $(call uart_baudrate,LIBMSPUARTLINK0_BAUDRATE,\
                                    $(LIBMSPUARTLINK0_BAUDRATE),$(CLOCK_FREQ_$(LIBMSPUARTLINK0_CLOCK)))
else
$(error Undefined config variable: LIBMSPUARTLINK0_BAUDRATE)
endif # LIBMSPUARTLINK_BAUDRATE

ifneq ($(LIBMSPUARTLINK0_CLOCK),)
override CFLAGS += -DLIBMSPUARTLINK0_CLOCK=$(LIBMSPUARTLINK0_CLOCK)
else
$(error Undefined confing variable: LIBMSPUARTLINK0_CLOCK)
endif

endif # LIBMSPUARTLINK0_UART_IDX


# UARTLINK1
ifneq ($(LIBMSPUARTLINK1_UART_IDX),)
override CFLAGS += -DLIBMSPUARTLINK1_UART_IDX=$(LIBMSPUARTLINK1_UART_IDX)

#ifneq ($(words $(LIBMSPUARTLINK1_PIN_RX) $(LIBMSPUARTLINK1_PIN_TX)),1)
#$(error One of these config variables needs to be defined: LIBMSPUARTLINK_PIN_{RX,TX})
#endif

ifneq ($(LIBMSPUARTLINK1_PIN_RX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK1_PIN_RX)
endif # LIBMSPUARTLINK_PIN_RX

ifneq ($(LIBMSPUARTLINK1_PIN_TX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK1_PIN_TX)
endif # LIBMSPUARTLINK_PIN_TX

ifneq ($(LIBMSPUARTLINK1_BAUDRATE),)
override CFLAGS := $(CFLAGS) $(call uart_baudrate,LIBMSPUARTLINK1_BAUDRATE,\
                                    $(LIBMSPUARTLINK1_BAUDRATE),$(CLOCK_FREQ_$(LIBMSPUARTLINK1_CLOCK)))
else
$(error Undefined config variable: LIBMSPUARTLINK1_BAUDRATE)
endif # LIBMSPUARTLINK_BAUDRATE

ifneq ($(LIBMSPUARTLINK1_CLOCK),)
override CFLAGS += -DLIBMSPUARTLINK1_CLOCK=$(LIBMSPUARTLINK1_CLOCK)
else
$(error Undefined confing variable: LIBMSPUARTLINK1_CLOCK)
endif

endif # LIBMSPUARTLINK1_UART_IDX


# UARTLINK2
ifneq ($(LIBMSPUARTLINK2_UART_IDX),)
override CFLAGS += -DLIBMSPUARTLINK2_UART_IDX=$(LIBMSPUARTLINK2_UART_IDX)

#ifneq ($(words $(LIBMSPUARTLINK2_PIN_RX) $(LIBMSPUARTLINK2_PIN_TX)),1)
#$(error One of these config variables needs to be defined: LIBMSPUARTLINK_PIN_{RX,TX})
#endif

ifneq ($(LIBMSPUARTLINK2_PIN_RX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK2_PIN_RX)
endif # LIBMSPUARTLINK_PIN_RX

ifneq ($(LIBMSPUARTLINK2_PIN_TX),)
override CFLAGS += $(call gpio_pin,LIBMSPUARTLINK2_PIN_TX)
endif # LIBMSPUARTLINK_PIN_TX

ifneq ($(LIBMSPUARTLINK2_BAUDRATE),)
override CFLAGS := $(CFLAGS) $(call uart_baudrate,LIBMSPUARTLINK2_BAUDRATE,\
                                    $(LIBMSPUARTLINK2_BAUDRATE),$(CLOCK_FREQ_$(LIBMSPUARTLINK2_CLOCK)))
else
$(error Undefined config variable: LIBMSPUARTLINK2_BAUDRATE)
endif # LIBMSPUARTLINK_BAUDRATE

ifneq ($(LIBMSPUARTLINK2_CLOCK),)
override CFLAGS += -DLIBMSPUARTLINK2_CLOCK=$(LIBMSPUARTLINK2_CLOCK)
else
$(error Undefined confing variable: LIBMSPUARTLINK2_CLOCK)
endif

endif # LIBMSPUARTLINK2_UART_IDX


ifeq ($(LIBMSPUARTLINK0_UART_IDX),)
ifeq ($(LIBMSPUARTLINK1_UART_IDX),)
ifeq ($(LIBMSPUARTLINK2_UART_IDX),)
$(error Undefined UARTLINK ID!: Define LIBMSPUARTLINK<x>_UART_IDX)
endif
endif
endif

ifeq ($(LIBMSPUARTLINK0_UART_IDX), $(LIBMSPUARTLINK1_UART_IDX))
$(error LIBMSPUARTLINK0_UART_IDX == LIBMSPUARTLINK1_UART_IDX)
else ifeq ($(LIBMSPUARTLINK0_UART_IDX), $(LIBMSPUARTLINK2_UART_IDX))
$(error LIBMSPUARTLINK0_UART_IDX == LIBMSPUARTLINK2_UART_IDX)
else ifeq ($(LIBMSPUARTLINK1_UART_IDX), $(LIBMSPUARTLINK2_UART_IDX))
$(error LIBMSPUARTLINK2_UART_IDX == LIBMSPUARTLINK1_UART_IDX)
endif

ifeq ($(LIBMSPUARTLINK0_PIN_RX), $(LIBMSPUARTLINK1_PIN_RX))
$(error LIBMSPUARTLINK0_PIN_RX == LIBMSPUARTLINK1_PIN_RX)
else ifeq ($(LIBMSPUARTLINK0_PIN_RX), $(LIBMSPUARTLINK2_PIN_RX))
$(error LIBMSPUARTLINK0_PIN_RX == LIBMSPUARTLINK2_PIN_RX)
else ifeq ($(LIBMSPUARTLINK1_PIN_RX), $(LIBMSPUARTLINK2_PIN_RX))
$(error LIBMSPUARTLINK2_PIN_RX == LIBMSPUARTLINK1_PIN_RX)
endif
